// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 48hdstfvEZkFZSekMr6Q9R
// Component: z3CYKlSW6J
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_robot_draws_you.module.css"; // plasmic-import: 48hdstfvEZkFZSekMr6Q9R/projectcss
import * as sty from "./PlasmicFooter.module.css"; // plasmic-import: z3CYKlSW6J/css

import HelpOutlineBlack24DpsvgIcon from "./icons/PlasmicIcon__HelpOutlineBlack24Dpsvg"; // plasmic-import: R4oOi9iOb/icon
import CollectionsBlack24DpsvgIcon from "./icons/PlasmicIcon__CollectionsBlack24Dpsvg"; // plasmic-import: 4DpgpgqvH/icon
import ShoppingCartBlack24DpsvgIcon from "./icons/PlasmicIcon__ShoppingCartBlack24Dpsvg"; // plasmic-import: mdMnqK-FO/icon
import ScienceBlack24DpsvgIcon from "./icons/PlasmicIcon__ScienceBlack24Dpsvg"; // plasmic-import: Jiybrqkkl/icon
import MailBlack24DpsvgIcon from "./icons/PlasmicIcon__MailBlack24Dpsvg"; // plasmic-import: t1Is1vbL3/icon
import PrecisionManufacturingBlack24DpsvgIcon from "./icons/PlasmicIcon__PrecisionManufacturingBlack24Dpsvg"; // plasmic-import: wcgSwq7ty/icon
import RobotBlack24DpsvgIcon from "./icons/PlasmicIcon__RobotBlack24Dpsvg"; // plasmic-import: rCq0c_tqG/icon
import SentimentSatisfiedAltBlack24DpsvgIcon from "./icons/PlasmicIcon__SentimentSatisfiedAltBlack24Dpsvg"; // plasmic-import: 222hDjYSN/icon
import HikingBlack24DpsvgIcon from "./icons/PlasmicIcon__HikingBlack24Dpsvg"; // plasmic-import: UcmdbM5yX/icon
import SettingsSuggestBlack24DpsvgIcon from "./icons/PlasmicIcon__SettingsSuggestBlack24Dpsvg"; // plasmic-import: C7-E4Y8-4/icon

export type PlasmicFooter__VariantMembers = {};

export type PlasmicFooter__VariantsArgs = {};
type VariantPropType = keyof PlasmicFooter__VariantsArgs;
export const PlasmicFooter__VariantProps = new Array<VariantPropType>();

export type PlasmicFooter__ArgsType = {};
type ArgPropType = keyof PlasmicFooter__ArgsType;
export const PlasmicFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicFooter__OverridesType = {
  root?: p.Flex<"div">;
};

export interface DefaultFooterProps {
  className?: string;
}

function PlasmicFooter__RenderFunc(props: {
  variants: PlasmicFooter__VariantsArgs;
  args: PlasmicFooter__ArgsType;
  overrides: PlasmicFooter__OverridesType;
  dataFetches?: PlasmicFooter__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box__g146E)}
      >
        <div className={classNames(defaultcss.all, sty.box__yWquS)}>
          <p.PlasmicLink
            className={classNames(defaultcss.all, sty.link__cL6Ot)}
            component={Link}
            href={"/about"}
            platform={"nextjs"}
          >
            <HelpOutlineBlack24DpsvgIcon
              className={classNames(defaultcss.all, sty.svg__gXiCe)}
              role={"img"}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__so3Ic
              )}
            >
              {"About"}
            </div>
          </p.PlasmicLink>
        </div>

        <div className={classNames(defaultcss.all, sty.box__tfqiK)}>
          <p.PlasmicLink
            className={classNames(defaultcss.all, sty.link__raVpg)}
            component={Link}
            href={"/gallery"}
            platform={"nextjs"}
          >
            <CollectionsBlack24DpsvgIcon
              className={classNames(defaultcss.all, sty.svg__o4LhT)}
              role={"img"}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__pUuU
              )}
            >
              {"Gallery"}
            </div>
          </p.PlasmicLink>
        </div>

        <div className={classNames(defaultcss.all, sty.box__aev48)}>
          <p.PlasmicLink
            className={classNames(defaultcss.all, sty.link__noqbP)}
            component={Link}
            href={"/shop"}
            platform={"nextjs"}
          >
            <ShoppingCartBlack24DpsvgIcon
              className={classNames(defaultcss.all, sty.svg__jE1RP)}
              role={"img"}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box___3Ds53
              )}
            >
              {"Shop"}
            </div>
          </p.PlasmicLink>
        </div>

        <div className={classNames(defaultcss.all, sty.box__uTsuJ)}>
          <p.PlasmicLink
            className={classNames(defaultcss.all, sty.link___4BSan)}
            component={Link}
            href={"/labs"}
            platform={"nextjs"}
          >
            <ScienceBlack24DpsvgIcon
              className={classNames(defaultcss.all, sty.svg__ooXa2)}
              role={"img"}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__aotcn
              )}
            >
              {"Labs"}
            </div>
          </p.PlasmicLink>
        </div>

        <div className={classNames(defaultcss.all, sty.box___5SJc)}>
          <p.PlasmicLink
            className={classNames(defaultcss.all, sty.link__b610K)}
            component={Link}
            href={"/contact"}
            platform={"nextjs"}
          >
            <MailBlack24DpsvgIcon
              className={classNames(defaultcss.all, sty.svg__wpbK)}
              role={"img"}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__jDoLp
              )}
            >
              {"Contact"}
            </div>
          </p.PlasmicLink>
        </div>
      </p.Stack>

      <div className={classNames(defaultcss.all, sty.box___4Ms0D)}>
        <p.PlasmicLink
          className={classNames(defaultcss.all, sty.link__pxAm1)}
          component={Link}
          href={"/"}
          platform={"nextjs"}
        >
          <PrecisionManufacturingBlack24DpsvgIcon
            className={classNames(defaultcss.all, sty.svg__rHk00)}
            role={"img"}
          />

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__sk3NU
            )}
          >
            {"Robot Draws You"}
          </div>

          <RobotBlack24DpsvgIcon
            className={classNames(defaultcss.all, sty.svg__h677D)}
            role={"img"}
          />
        </p.PlasmicLink>

        <div className={classNames(defaultcss.all, sty.box__zWzyq)}>
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__ghXh
            )}
          >
            {"Have A"}
          </div>

          <SentimentSatisfiedAltBlack24DpsvgIcon
            className={classNames(defaultcss.all, sty.svg__soq43)}
            role={"img"}
          />

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__qdMa
            )}
          >
            {"Nice Day"}
          </div>
        </div>

        <p.PlasmicLink
          className={classNames(defaultcss.all, sty.link___1US1E)}
          component={Link}
          href={"https://www.vtapi.co" as const}
          platform={"nextjs"}
        >
          <HikingBlack24DpsvgIcon
            className={classNames(defaultcss.all, sty.svg__oxPRu)}
            role={"img"}
          />

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box___4GnZi
            )}
          >
            {"vtapi.co"}
          </div>

          <SettingsSuggestBlack24DpsvgIcon
            className={classNames(defaultcss.all, sty.svg__eafH)}
            role={"img"}
          />
        </p.PlasmicLink>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFooter__VariantsArgs;
    args?: PlasmicFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicFooter__Fetches;
  } & Omit<PlasmicFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFooter__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
